function obj = linearRegressionScoreFcns(llstr)
%     addones = @(X) [X ones(size(X,1),1)];
    if strcmp(llstr, 'poiss')
        obj.llFcn0 = @(x, y, w, hyper) -tools.neglogli_poissGLM(w, ...
            tools.ifNecessaryAddDC(x, w), y, @tools.expfun);
%         obj.llFcn = @(trials, w, hyper) -tools.neglogli_poissGLM(...
%             w, tools.ifNecessaryAddDC(trials.x_test, w), trials.y_test, @tools.expfun);
    elseif strcmp(llstr, 'gauss')
        obj.llFcn0 = @(x, y, w, hyper) asd.gauss.logLikelihood(y, ...
            tools.ifNecessaryAddDC(x, w), w, hyper(2));
%         obj.llFcn = @(trials, w, hyper) asd.gauss.logLikelihood(...
%             trials.y_test, tools.ifNecessaryAddDC(trials.x_test, w), w, hyper(2));
    end
    obj.llFcn = @(trials, w, hyper) obj.llFcn0(trials.x_test, ...
        trials.y_test, w, hyper);
    
    obj.rsqFcn = @(trials, w, hyper) ...
        tools.rsq(tools.ifNecessaryAddDC(trials.x_test, w)*w, trials.y_test);
    obj.pseudoRsqFcn = @(trials, w, hyper) ...
        tools.pseudoRsq(...
            obj.llFcn(trials, w, hyper), ... % actual model
            0, ... % saturated model
            obj.llFcn0(... % null model
                mean(trials.y_train)*ones(size(trials.y_test,1),1), ...
                    trials.y_test, 1, hyper));
end
