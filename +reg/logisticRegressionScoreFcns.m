function obj = logisticRegressionScoreFcns()
    obj.llFcn0 = @(x, y, w) ...
        -tools.neglogli_bernoulliGLM(w, tools.ifNecessaryAddDC(x, w), y);
    obj.llFcn = @(trials, w, hyper) ...
        obj.llFcn0(trials.x_test, trials.y_test, w);
    obj.llSatFcn = @(trials) 0; % bern saturated model: log(ll) = log(1)
    obj.llNullFcn = @(trials) obj.llFcn0(...
        mean(trials.y_train)*ones(size(trials.y_test,1),1), ...
        trials.y_test, 1);
    
    obj.prediction = @(trials, w, hyper) tools.logistic(...
            tools.ifNecessaryAddDC(trials.x_test,w)*w);

    obj.rsqFcn = @(trials, w, hyper) tools.rsq(...
        obj.prediction(trials, w, hyper), trials.y_test);
        
    obj.pseudoRsqFcn = @(trials, w, hyper) ...
        tools.pseudoRsq(...
            obj.llFcn(trials, w, hyper), ... % actual model
            obj.llSatFcn(trials), ... % saturated model
            obj.llNullFcn(trials)); % null model
    
    obj.correct = @(trials, w, hyper) ...
        obj.prediction(trials, w, hyper) == trials.y_test;
    obj.pctCorrectFcn = @(trials, w, hyper) ...
        sum(obj.correct(trials, w, hyper)) / ...
            numel(obj.correct(trials, w, hyper));
end
